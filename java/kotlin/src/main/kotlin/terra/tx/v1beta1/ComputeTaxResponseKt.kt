//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: terra/tx/v1beta1/service.proto

package terra.tx.v1beta1;

@kotlin.jvm.JvmSynthetic
inline fun computeTaxResponse(block: terra.tx.v1beta1.ComputeTaxResponseKt.Dsl.() -> Unit): terra.tx.v1beta1.ServiceOuterClass.ComputeTaxResponse =
  terra.tx.v1beta1.ComputeTaxResponseKt.Dsl._create(terra.tx.v1beta1.ServiceOuterClass.ComputeTaxResponse.newBuilder()).apply { block() }._build()
object ComputeTaxResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: terra.tx.v1beta1.ServiceOuterClass.ComputeTaxResponse.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: terra.tx.v1beta1.ServiceOuterClass.ComputeTaxResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): terra.tx.v1beta1.ServiceOuterClass.ComputeTaxResponse = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class TaxAmountProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * amount is the amount of coins to be paid as a fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin tax_amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
     val taxAmount: com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, TaxAmountProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getTaxAmountList()
      )
    /**
     * <pre>
     * amount is the amount of coins to be paid as a fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin tax_amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     * @param value The taxAmount to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addTaxAmount")
    fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, TaxAmountProxy>.add(value: cosmos.base.v1beta1.CoinOuterClass.Coin) {
      _builder.addTaxAmount(value)
    }/**
     * <pre>
     * amount is the amount of coins to be paid as a fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin tax_amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     * @param value The taxAmount to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignTaxAmount")
    inline operator fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, TaxAmountProxy>.plusAssign(value: cosmos.base.v1beta1.CoinOuterClass.Coin) {
      add(value)
    }/**
     * <pre>
     * amount is the amount of coins to be paid as a fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin tax_amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     * @param values The taxAmount to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllTaxAmount")
    fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, TaxAmountProxy>.addAll(values: kotlin.collections.Iterable<cosmos.base.v1beta1.CoinOuterClass.Coin>) {
      _builder.addAllTaxAmount(values)
    }/**
     * <pre>
     * amount is the amount of coins to be paid as a fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin tax_amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     * @param values The taxAmount to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllTaxAmount")
    inline operator fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, TaxAmountProxy>.plusAssign(values: kotlin.collections.Iterable<cosmos.base.v1beta1.CoinOuterClass.Coin>) {
      addAll(values)
    }/**
     * <pre>
     * amount is the amount of coins to be paid as a fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin tax_amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     * @param index The index to set the value at.
     * @param value The taxAmount to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setTaxAmount")
    operator fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, TaxAmountProxy>.set(index: kotlin.Int, value: cosmos.base.v1beta1.CoinOuterClass.Coin) {
      _builder.setTaxAmount(index, value)
    }/**
     * <pre>
     * amount is the amount of coins to be paid as a fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin tax_amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearTaxAmount")
    fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, TaxAmountProxy>.clear() {
      _builder.clearTaxAmount()
    }}
}
@kotlin.jvm.JvmSynthetic
inline fun terra.tx.v1beta1.ServiceOuterClass.ComputeTaxResponse.copy(block: terra.tx.v1beta1.ComputeTaxResponseKt.Dsl.() -> Unit): terra.tx.v1beta1.ServiceOuterClass.ComputeTaxResponse =
  terra.tx.v1beta1.ComputeTaxResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()
