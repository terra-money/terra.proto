//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: terra/oracle/v1beta1/oracle.proto

package terra.oracle.v1beta1;

@kotlin.jvm.JvmSynthetic
inline fun denom(block: terra.oracle.v1beta1.DenomKt.Dsl.() -> Unit): terra.oracle.v1beta1.Oracle.Denom =
  terra.oracle.v1beta1.DenomKt.Dsl._create(terra.oracle.v1beta1.Oracle.Denom.newBuilder()).apply { block() }._build()
object DenomKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: terra.oracle.v1beta1.Oracle.Denom.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: terra.oracle.v1beta1.Oracle.Denom.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): terra.oracle.v1beta1.Oracle.Denom = _builder.build()

    /**
     * <code>string name = 1 [(.gogoproto.moretags) = "yaml:&#92;"name&#92;""];</code>
     */
    var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * <code>string name = 1 [(.gogoproto.moretags) = "yaml:&#92;"name&#92;""];</code>
     */
    fun clearName() {
      _builder.clearName()
    }

    /**
     * <code>string tobin_tax = 2 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"tobin_tax&#92;""];</code>
     */
    var tobinTax: kotlin.String
      @JvmName("getTobinTax")
      get() = _builder.getTobinTax()
      @JvmName("setTobinTax")
      set(value) {
        _builder.setTobinTax(value)
      }
    /**
     * <code>string tobin_tax = 2 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"tobin_tax&#92;""];</code>
     */
    fun clearTobinTax() {
      _builder.clearTobinTax()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun terra.oracle.v1beta1.Oracle.Denom.copy(block: terra.oracle.v1beta1.DenomKt.Dsl.() -> Unit): terra.oracle.v1beta1.Oracle.Denom =
  terra.oracle.v1beta1.DenomKt.Dsl._create(this.toBuilder()).apply { block() }._build()
