//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: terra/oracle/v1beta1/query.proto

package terra.oracle.v1beta1;

@kotlin.jvm.JvmSynthetic
inline fun queryExchangeRatesResponse(block: terra.oracle.v1beta1.QueryExchangeRatesResponseKt.Dsl.() -> Unit): terra.oracle.v1beta1.QueryOuterClass.QueryExchangeRatesResponse =
  terra.oracle.v1beta1.QueryExchangeRatesResponseKt.Dsl._create(terra.oracle.v1beta1.QueryOuterClass.QueryExchangeRatesResponse.newBuilder()).apply { block() }._build()
object QueryExchangeRatesResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: terra.oracle.v1beta1.QueryOuterClass.QueryExchangeRatesResponse.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: terra.oracle.v1beta1.QueryOuterClass.QueryExchangeRatesResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): terra.oracle.v1beta1.QueryOuterClass.QueryExchangeRatesResponse = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class ExchangeRatesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * exchange_rates defines a list of the exchange rate for all whitelisted denoms.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin exchange_rates = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
     val exchangeRates: com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.DecCoin, ExchangeRatesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getExchangeRatesList()
      )
    /**
     * <pre>
     * exchange_rates defines a list of the exchange rate for all whitelisted denoms.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin exchange_rates = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     * @param value The exchangeRates to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addExchangeRates")
    fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.DecCoin, ExchangeRatesProxy>.add(value: cosmos.base.v1beta1.CoinOuterClass.DecCoin) {
      _builder.addExchangeRates(value)
    }/**
     * <pre>
     * exchange_rates defines a list of the exchange rate for all whitelisted denoms.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin exchange_rates = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     * @param value The exchangeRates to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignExchangeRates")
    inline operator fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.DecCoin, ExchangeRatesProxy>.plusAssign(value: cosmos.base.v1beta1.CoinOuterClass.DecCoin) {
      add(value)
    }/**
     * <pre>
     * exchange_rates defines a list of the exchange rate for all whitelisted denoms.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin exchange_rates = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     * @param values The exchangeRates to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllExchangeRates")
    fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.DecCoin, ExchangeRatesProxy>.addAll(values: kotlin.collections.Iterable<cosmos.base.v1beta1.CoinOuterClass.DecCoin>) {
      _builder.addAllExchangeRates(values)
    }/**
     * <pre>
     * exchange_rates defines a list of the exchange rate for all whitelisted denoms.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin exchange_rates = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     * @param values The exchangeRates to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllExchangeRates")
    inline operator fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.DecCoin, ExchangeRatesProxy>.plusAssign(values: kotlin.collections.Iterable<cosmos.base.v1beta1.CoinOuterClass.DecCoin>) {
      addAll(values)
    }/**
     * <pre>
     * exchange_rates defines a list of the exchange rate for all whitelisted denoms.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin exchange_rates = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     * @param index The index to set the value at.
     * @param value The exchangeRates to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setExchangeRates")
    operator fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.DecCoin, ExchangeRatesProxy>.set(index: kotlin.Int, value: cosmos.base.v1beta1.CoinOuterClass.DecCoin) {
      _builder.setExchangeRates(index, value)
    }/**
     * <pre>
     * exchange_rates defines a list of the exchange rate for all whitelisted denoms.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin exchange_rates = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearExchangeRates")
    fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.DecCoin, ExchangeRatesProxy>.clear() {
      _builder.clearExchangeRates()
    }}
}
@kotlin.jvm.JvmSynthetic
inline fun terra.oracle.v1beta1.QueryOuterClass.QueryExchangeRatesResponse.copy(block: terra.oracle.v1beta1.QueryExchangeRatesResponseKt.Dsl.() -> Unit): terra.oracle.v1beta1.QueryOuterClass.QueryExchangeRatesResponse =
  terra.oracle.v1beta1.QueryExchangeRatesResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()
