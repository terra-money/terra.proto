//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: tendermint/abci/types.proto

package tendermint.abci;

@kotlin.jvm.JvmSynthetic
inline fun validator(block: tendermint.abci.ValidatorKt.Dsl.() -> Unit): tendermint.abci.Types.Validator =
  tendermint.abci.ValidatorKt.Dsl._create(tendermint.abci.Types.Validator.newBuilder()).apply { block() }._build()
object ValidatorKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: tendermint.abci.Types.Validator.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: tendermint.abci.Types.Validator.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): tendermint.abci.Types.Validator = _builder.build()

    /**
     * <pre>
     * The first 20 bytes of SHA256(public key)
     * </pre>
     *
     * <code>bytes address = 1;</code>
     */
    var address: com.google.protobuf.ByteString
      @JvmName("getAddress")
      get() = _builder.getAddress()
      @JvmName("setAddress")
      set(value) {
        _builder.setAddress(value)
      }
    /**
     * <pre>
     * The first 20 bytes of SHA256(public key)
     * </pre>
     *
     * <code>bytes address = 1;</code>
     */
    fun clearAddress() {
      _builder.clearAddress()
    }

    /**
     * <pre>
     * PubKey pub_key = 2 [(gogoproto.nullable)=false];
     * </pre>
     *
     * <code>int64 power = 3;</code>
     */
    var power: kotlin.Long
      @JvmName("getPower")
      get() = _builder.getPower()
      @JvmName("setPower")
      set(value) {
        _builder.setPower(value)
      }
    /**
     * <pre>
     * PubKey pub_key = 2 [(gogoproto.nullable)=false];
     * </pre>
     *
     * <code>int64 power = 3;</code>
     */
    fun clearPower() {
      _builder.clearPower()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun tendermint.abci.Types.Validator.copy(block: tendermint.abci.ValidatorKt.Dsl.() -> Unit): tendermint.abci.Types.Validator =
  tendermint.abci.ValidatorKt.Dsl._create(this.toBuilder()).apply { block() }._build()
