//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: tendermint/types/types.proto

package tendermint.types;

@kotlin.jvm.JvmSynthetic
inline fun commit(block: tendermint.types.CommitKt.Dsl.() -> Unit): tendermint.types.Types.Commit =
  tendermint.types.CommitKt.Dsl._create(tendermint.types.Types.Commit.newBuilder()).apply { block() }._build()
object CommitKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: tendermint.types.Types.Commit.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: tendermint.types.Types.Commit.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): tendermint.types.Types.Commit = _builder.build()

    /**
     * <code>int64 height = 1;</code>
     */
    var height: kotlin.Long
      @JvmName("getHeight")
      get() = _builder.getHeight()
      @JvmName("setHeight")
      set(value) {
        _builder.setHeight(value)
      }
    /**
     * <code>int64 height = 1;</code>
     */
    fun clearHeight() {
      _builder.clearHeight()
    }

    /**
     * <code>int32 round = 2;</code>
     */
    var round: kotlin.Int
      @JvmName("getRound")
      get() = _builder.getRound()
      @JvmName("setRound")
      set(value) {
        _builder.setRound(value)
      }
    /**
     * <code>int32 round = 2;</code>
     */
    fun clearRound() {
      _builder.clearRound()
    }

    /**
     * <code>.tendermint.types.BlockID block_id = 3 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "BlockID"];</code>
     */
    var blockId: tendermint.types.Types.BlockID
      @JvmName("getBlockId")
      get() = _builder.getBlockId()
      @JvmName("setBlockId")
      set(value) {
        _builder.setBlockId(value)
      }
    /**
     * <code>.tendermint.types.BlockID block_id = 3 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "BlockID"];</code>
     */
    fun clearBlockId() {
      _builder.clearBlockId()
    }
    /**
     * <code>.tendermint.types.BlockID block_id = 3 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "BlockID"];</code>
     * @return Whether the blockId field is set.
     */
    fun hasBlockId(): kotlin.Boolean {
      return _builder.hasBlockId()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class SignaturesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .tendermint.types.CommitSig signatures = 4 [(.gogoproto.nullable) = false];</code>
     */
     val signatures: com.google.protobuf.kotlin.DslList<tendermint.types.Types.CommitSig, SignaturesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getSignaturesList()
      )
    /**
     * <code>repeated .tendermint.types.CommitSig signatures = 4 [(.gogoproto.nullable) = false];</code>
     * @param value The signatures to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addSignatures")
    fun com.google.protobuf.kotlin.DslList<tendermint.types.Types.CommitSig, SignaturesProxy>.add(value: tendermint.types.Types.CommitSig) {
      _builder.addSignatures(value)
    }/**
     * <code>repeated .tendermint.types.CommitSig signatures = 4 [(.gogoproto.nullable) = false];</code>
     * @param value The signatures to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignSignatures")
    inline operator fun com.google.protobuf.kotlin.DslList<tendermint.types.Types.CommitSig, SignaturesProxy>.plusAssign(value: tendermint.types.Types.CommitSig) {
      add(value)
    }/**
     * <code>repeated .tendermint.types.CommitSig signatures = 4 [(.gogoproto.nullable) = false];</code>
     * @param values The signatures to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllSignatures")
    fun com.google.protobuf.kotlin.DslList<tendermint.types.Types.CommitSig, SignaturesProxy>.addAll(values: kotlin.collections.Iterable<tendermint.types.Types.CommitSig>) {
      _builder.addAllSignatures(values)
    }/**
     * <code>repeated .tendermint.types.CommitSig signatures = 4 [(.gogoproto.nullable) = false];</code>
     * @param values The signatures to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllSignatures")
    inline operator fun com.google.protobuf.kotlin.DslList<tendermint.types.Types.CommitSig, SignaturesProxy>.plusAssign(values: kotlin.collections.Iterable<tendermint.types.Types.CommitSig>) {
      addAll(values)
    }/**
     * <code>repeated .tendermint.types.CommitSig signatures = 4 [(.gogoproto.nullable) = false];</code>
     * @param index The index to set the value at.
     * @param value The signatures to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setSignatures")
    operator fun com.google.protobuf.kotlin.DslList<tendermint.types.Types.CommitSig, SignaturesProxy>.set(index: kotlin.Int, value: tendermint.types.Types.CommitSig) {
      _builder.setSignatures(index, value)
    }/**
     * <code>repeated .tendermint.types.CommitSig signatures = 4 [(.gogoproto.nullable) = false];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearSignatures")
    fun com.google.protobuf.kotlin.DslList<tendermint.types.Types.CommitSig, SignaturesProxy>.clear() {
      _builder.clearSignatures()
    }}
}
@kotlin.jvm.JvmSynthetic
inline fun tendermint.types.Types.Commit.copy(block: tendermint.types.CommitKt.Dsl.() -> Unit): tendermint.types.Types.Commit =
  tendermint.types.CommitKt.Dsl._create(this.toBuilder()).apply { block() }._build()
