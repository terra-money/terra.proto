//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: tendermint/types/types.proto

package tendermint.types;

@kotlin.jvm.JvmSynthetic
inline fun signedHeader(block: tendermint.types.SignedHeaderKt.Dsl.() -> Unit): tendermint.types.Types.SignedHeader =
  tendermint.types.SignedHeaderKt.Dsl._create(tendermint.types.Types.SignedHeader.newBuilder()).apply { block() }._build()
object SignedHeaderKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: tendermint.types.Types.SignedHeader.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: tendermint.types.Types.SignedHeader.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): tendermint.types.Types.SignedHeader = _builder.build()

    /**
     * <code>.tendermint.types.Header header = 1;</code>
     */
    var header: tendermint.types.Types.Header
      @JvmName("getHeader")
      get() = _builder.getHeader()
      @JvmName("setHeader")
      set(value) {
        _builder.setHeader(value)
      }
    /**
     * <code>.tendermint.types.Header header = 1;</code>
     */
    fun clearHeader() {
      _builder.clearHeader()
    }
    /**
     * <code>.tendermint.types.Header header = 1;</code>
     * @return Whether the header field is set.
     */
    fun hasHeader(): kotlin.Boolean {
      return _builder.hasHeader()
    }

    /**
     * <code>.tendermint.types.Commit commit = 2;</code>
     */
    var commit: tendermint.types.Types.Commit
      @JvmName("getCommit")
      get() = _builder.getCommit()
      @JvmName("setCommit")
      set(value) {
        _builder.setCommit(value)
      }
    /**
     * <code>.tendermint.types.Commit commit = 2;</code>
     */
    fun clearCommit() {
      _builder.clearCommit()
    }
    /**
     * <code>.tendermint.types.Commit commit = 2;</code>
     * @return Whether the commit field is set.
     */
    fun hasCommit(): kotlin.Boolean {
      return _builder.hasCommit()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun tendermint.types.Types.SignedHeader.copy(block: tendermint.types.SignedHeaderKt.Dsl.() -> Unit): tendermint.types.Types.SignedHeader =
  tendermint.types.SignedHeaderKt.Dsl._create(this.toBuilder()).apply { block() }._build()
