//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: tendermint/types/types.proto

package tendermint.types;

@kotlin.jvm.JvmSynthetic
inline fun commitSig(block: tendermint.types.CommitSigKt.Dsl.() -> Unit): tendermint.types.Types.CommitSig =
  tendermint.types.CommitSigKt.Dsl._create(tendermint.types.Types.CommitSig.newBuilder()).apply { block() }._build()
object CommitSigKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: tendermint.types.Types.CommitSig.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: tendermint.types.Types.CommitSig.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): tendermint.types.Types.CommitSig = _builder.build()

    /**
     * <code>.tendermint.types.BlockIDFlag block_id_flag = 1;</code>
     */
    var blockIdFlag: tendermint.types.Types.BlockIDFlag
      @JvmName("getBlockIdFlag")
      get() = _builder.getBlockIdFlag()
      @JvmName("setBlockIdFlag")
      set(value) {
        _builder.setBlockIdFlag(value)
      }
    /**
     * <code>.tendermint.types.BlockIDFlag block_id_flag = 1;</code>
     */
    fun clearBlockIdFlag() {
      _builder.clearBlockIdFlag()
    }

    /**
     * <code>bytes validator_address = 2;</code>
     */
    var validatorAddress: com.google.protobuf.ByteString
      @JvmName("getValidatorAddress")
      get() = _builder.getValidatorAddress()
      @JvmName("setValidatorAddress")
      set(value) {
        _builder.setValidatorAddress(value)
      }
    /**
     * <code>bytes validator_address = 2;</code>
     */
    fun clearValidatorAddress() {
      _builder.clearValidatorAddress()
    }

    /**
     * <code>.google.protobuf.Timestamp timestamp = 3 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    var timestamp: com.google.protobuf.Timestamp
      @JvmName("getTimestamp")
      get() = _builder.getTimestamp()
      @JvmName("setTimestamp")
      set(value) {
        _builder.setTimestamp(value)
      }
    /**
     * <code>.google.protobuf.Timestamp timestamp = 3 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    fun clearTimestamp() {
      _builder.clearTimestamp()
    }
    /**
     * <code>.google.protobuf.Timestamp timestamp = 3 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @return Whether the timestamp field is set.
     */
    fun hasTimestamp(): kotlin.Boolean {
      return _builder.hasTimestamp()
    }

    /**
     * <code>bytes signature = 4;</code>
     */
    var signature: com.google.protobuf.ByteString
      @JvmName("getSignature")
      get() = _builder.getSignature()
      @JvmName("setSignature")
      set(value) {
        _builder.setSignature(value)
      }
    /**
     * <code>bytes signature = 4;</code>
     */
    fun clearSignature() {
      _builder.clearSignature()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun tendermint.types.Types.CommitSig.copy(block: tendermint.types.CommitSigKt.Dsl.() -> Unit): tendermint.types.Types.CommitSig =
  tendermint.types.CommitSigKt.Dsl._create(this.toBuilder()).apply { block() }._build()
