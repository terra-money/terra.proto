//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: tendermint/crypto/proof.proto

package tendermint.crypto;

@kotlin.jvm.JvmSynthetic
inline fun proofOp(block: tendermint.crypto.ProofOpKt.Dsl.() -> Unit): tendermint.crypto.ProofOuterClass.ProofOp =
  tendermint.crypto.ProofOpKt.Dsl._create(tendermint.crypto.ProofOuterClass.ProofOp.newBuilder()).apply { block() }._build()
object ProofOpKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: tendermint.crypto.ProofOuterClass.ProofOp.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: tendermint.crypto.ProofOuterClass.ProofOp.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): tendermint.crypto.ProofOuterClass.ProofOp = _builder.build()

    /**
     * <code>string type = 1;</code>
     */
    var type: kotlin.String
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * <code>string type = 1;</code>
     */
    fun clearType() {
      _builder.clearType()
    }

    /**
     * <code>bytes key = 2;</code>
     */
    var key: com.google.protobuf.ByteString
      @JvmName("getKey")
      get() = _builder.getKey()
      @JvmName("setKey")
      set(value) {
        _builder.setKey(value)
      }
    /**
     * <code>bytes key = 2;</code>
     */
    fun clearKey() {
      _builder.clearKey()
    }

    /**
     * <code>bytes data = 3;</code>
     */
    var data: com.google.protobuf.ByteString
      @JvmName("getData")
      get() = _builder.getData()
      @JvmName("setData")
      set(value) {
        _builder.setData(value)
      }
    /**
     * <code>bytes data = 3;</code>
     */
    fun clearData() {
      _builder.clearData()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun tendermint.crypto.ProofOuterClass.ProofOp.copy(block: tendermint.crypto.ProofOpKt.Dsl.() -> Unit): tendermint.crypto.ProofOuterClass.ProofOp =
  tendermint.crypto.ProofOpKt.Dsl._create(this.toBuilder()).apply { block() }._build()
