//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ibc/applications/transfer/v1/query.proto

package ibc.applications.transfer.v1;

@kotlin.jvm.JvmSynthetic
inline fun queryDenomTraceResponse(block: ibc.applications.transfer.v1.QueryDenomTraceResponseKt.Dsl.() -> Unit): ibc.applications.transfer.v1.QueryOuterClass.QueryDenomTraceResponse =
  ibc.applications.transfer.v1.QueryDenomTraceResponseKt.Dsl._create(ibc.applications.transfer.v1.QueryOuterClass.QueryDenomTraceResponse.newBuilder()).apply { block() }._build()
object QueryDenomTraceResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: ibc.applications.transfer.v1.QueryOuterClass.QueryDenomTraceResponse.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ibc.applications.transfer.v1.QueryOuterClass.QueryDenomTraceResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ibc.applications.transfer.v1.QueryOuterClass.QueryDenomTraceResponse = _builder.build()

    /**
     * <pre>
     * denom_trace returns the requested denomination trace information.
     * </pre>
     *
     * <code>.ibc.applications.transfer.v1.DenomTrace denom_trace = 1;</code>
     */
    var denomTrace: ibc.applications.transfer.v1.Transfer.DenomTrace
      @JvmName("getDenomTrace")
      get() = _builder.getDenomTrace()
      @JvmName("setDenomTrace")
      set(value) {
        _builder.setDenomTrace(value)
      }
    /**
     * <pre>
     * denom_trace returns the requested denomination trace information.
     * </pre>
     *
     * <code>.ibc.applications.transfer.v1.DenomTrace denom_trace = 1;</code>
     */
    fun clearDenomTrace() {
      _builder.clearDenomTrace()
    }
    /**
     * <pre>
     * denom_trace returns the requested denomination trace information.
     * </pre>
     *
     * <code>.ibc.applications.transfer.v1.DenomTrace denom_trace = 1;</code>
     * @return Whether the denomTrace field is set.
     */
    fun hasDenomTrace(): kotlin.Boolean {
      return _builder.hasDenomTrace()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun ibc.applications.transfer.v1.QueryOuterClass.QueryDenomTraceResponse.copy(block: ibc.applications.transfer.v1.QueryDenomTraceResponseKt.Dsl.() -> Unit): ibc.applications.transfer.v1.QueryOuterClass.QueryDenomTraceResponse =
  ibc.applications.transfer.v1.QueryDenomTraceResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()
