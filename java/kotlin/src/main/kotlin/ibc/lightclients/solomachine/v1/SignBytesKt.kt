//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ibc/lightclients/solomachine/v1/solomachine.proto

package ibc.lightclients.solomachine.v1;

@kotlin.jvm.JvmSynthetic
inline fun signBytes(block: ibc.lightclients.solomachine.v1.SignBytesKt.Dsl.() -> Unit): ibc.lightclients.solomachine.v1.Solomachine.SignBytes =
  ibc.lightclients.solomachine.v1.SignBytesKt.Dsl._create(ibc.lightclients.solomachine.v1.Solomachine.SignBytes.newBuilder()).apply { block() }._build()
object SignBytesKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: ibc.lightclients.solomachine.v1.Solomachine.SignBytes.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ibc.lightclients.solomachine.v1.Solomachine.SignBytes.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ibc.lightclients.solomachine.v1.Solomachine.SignBytes = _builder.build()

    /**
     * <code>uint64 sequence = 1;</code>
     */
    var sequence: kotlin.Long
      @JvmName("getSequence")
      get() = _builder.getSequence()
      @JvmName("setSequence")
      set(value) {
        _builder.setSequence(value)
      }
    /**
     * <code>uint64 sequence = 1;</code>
     */
    fun clearSequence() {
      _builder.clearSequence()
    }

    /**
     * <code>uint64 timestamp = 2;</code>
     */
    var timestamp: kotlin.Long
      @JvmName("getTimestamp")
      get() = _builder.getTimestamp()
      @JvmName("setTimestamp")
      set(value) {
        _builder.setTimestamp(value)
      }
    /**
     * <code>uint64 timestamp = 2;</code>
     */
    fun clearTimestamp() {
      _builder.clearTimestamp()
    }

    /**
     * <code>string diversifier = 3;</code>
     */
    var diversifier: kotlin.String
      @JvmName("getDiversifier")
      get() = _builder.getDiversifier()
      @JvmName("setDiversifier")
      set(value) {
        _builder.setDiversifier(value)
      }
    /**
     * <code>string diversifier = 3;</code>
     */
    fun clearDiversifier() {
      _builder.clearDiversifier()
    }

    /**
     * <pre>
     * type of the data used
     * </pre>
     *
     * <code>.ibc.lightclients.solomachine.v1.DataType data_type = 4 [(.gogoproto.moretags) = "yaml:&#92;"data_type&#92;""];</code>
     */
    var dataType: ibc.lightclients.solomachine.v1.Solomachine.DataType
      @JvmName("getDataType")
      get() = _builder.getDataType()
      @JvmName("setDataType")
      set(value) {
        _builder.setDataType(value)
      }
    /**
     * <pre>
     * type of the data used
     * </pre>
     *
     * <code>.ibc.lightclients.solomachine.v1.DataType data_type = 4 [(.gogoproto.moretags) = "yaml:&#92;"data_type&#92;""];</code>
     */
    fun clearDataType() {
      _builder.clearDataType()
    }

    /**
     * <pre>
     * marshaled data
     * </pre>
     *
     * <code>bytes data = 5;</code>
     */
    var data: com.google.protobuf.ByteString
      @JvmName("getData")
      get() = _builder.getData()
      @JvmName("setData")
      set(value) {
        _builder.setData(value)
      }
    /**
     * <pre>
     * marshaled data
     * </pre>
     *
     * <code>bytes data = 5;</code>
     */
    fun clearData() {
      _builder.clearData()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun ibc.lightclients.solomachine.v1.Solomachine.SignBytes.copy(block: ibc.lightclients.solomachine.v1.SignBytesKt.Dsl.() -> Unit): ibc.lightclients.solomachine.v1.Solomachine.SignBytes =
  ibc.lightclients.solomachine.v1.SignBytesKt.Dsl._create(this.toBuilder()).apply { block() }._build()
