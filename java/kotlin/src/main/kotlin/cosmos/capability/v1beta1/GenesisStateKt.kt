//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/capability/v1beta1/genesis.proto

package cosmos.capability.v1beta1;

@kotlin.jvm.JvmSynthetic
inline fun genesisState(block: cosmos.capability.v1beta1.GenesisStateKt.Dsl.() -> Unit): cosmos.capability.v1beta1.Genesis.GenesisState =
  cosmos.capability.v1beta1.GenesisStateKt.Dsl._create(cosmos.capability.v1beta1.Genesis.GenesisState.newBuilder()).apply { block() }._build()
object GenesisStateKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: cosmos.capability.v1beta1.Genesis.GenesisState.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.capability.v1beta1.Genesis.GenesisState.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.capability.v1beta1.Genesis.GenesisState = _builder.build()

    /**
     * <pre>
     * index is the capability global index.
     * </pre>
     *
     * <code>uint64 index = 1;</code>
     */
    var index: kotlin.Long
      @JvmName("getIndex")
      get() = _builder.getIndex()
      @JvmName("setIndex")
      set(value) {
        _builder.setIndex(value)
      }
    /**
     * <pre>
     * index is the capability global index.
     * </pre>
     *
     * <code>uint64 index = 1;</code>
     */
    fun clearIndex() {
      _builder.clearIndex()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class OwnersProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * owners represents a map from index to owners of the capability index
     * index key is string to allow amino marshalling.
     * </pre>
     *
     * <code>repeated .cosmos.capability.v1beta1.GenesisOwners owners = 2 [(.gogoproto.nullable) = false];</code>
     */
     val owners: com.google.protobuf.kotlin.DslList<cosmos.capability.v1beta1.Genesis.GenesisOwners, OwnersProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getOwnersList()
      )
    /**
     * <pre>
     * owners represents a map from index to owners of the capability index
     * index key is string to allow amino marshalling.
     * </pre>
     *
     * <code>repeated .cosmos.capability.v1beta1.GenesisOwners owners = 2 [(.gogoproto.nullable) = false];</code>
     * @param value The owners to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addOwners")
    fun com.google.protobuf.kotlin.DslList<cosmos.capability.v1beta1.Genesis.GenesisOwners, OwnersProxy>.add(value: cosmos.capability.v1beta1.Genesis.GenesisOwners) {
      _builder.addOwners(value)
    }/**
     * <pre>
     * owners represents a map from index to owners of the capability index
     * index key is string to allow amino marshalling.
     * </pre>
     *
     * <code>repeated .cosmos.capability.v1beta1.GenesisOwners owners = 2 [(.gogoproto.nullable) = false];</code>
     * @param value The owners to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignOwners")
    inline operator fun com.google.protobuf.kotlin.DslList<cosmos.capability.v1beta1.Genesis.GenesisOwners, OwnersProxy>.plusAssign(value: cosmos.capability.v1beta1.Genesis.GenesisOwners) {
      add(value)
    }/**
     * <pre>
     * owners represents a map from index to owners of the capability index
     * index key is string to allow amino marshalling.
     * </pre>
     *
     * <code>repeated .cosmos.capability.v1beta1.GenesisOwners owners = 2 [(.gogoproto.nullable) = false];</code>
     * @param values The owners to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllOwners")
    fun com.google.protobuf.kotlin.DslList<cosmos.capability.v1beta1.Genesis.GenesisOwners, OwnersProxy>.addAll(values: kotlin.collections.Iterable<cosmos.capability.v1beta1.Genesis.GenesisOwners>) {
      _builder.addAllOwners(values)
    }/**
     * <pre>
     * owners represents a map from index to owners of the capability index
     * index key is string to allow amino marshalling.
     * </pre>
     *
     * <code>repeated .cosmos.capability.v1beta1.GenesisOwners owners = 2 [(.gogoproto.nullable) = false];</code>
     * @param values The owners to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllOwners")
    inline operator fun com.google.protobuf.kotlin.DslList<cosmos.capability.v1beta1.Genesis.GenesisOwners, OwnersProxy>.plusAssign(values: kotlin.collections.Iterable<cosmos.capability.v1beta1.Genesis.GenesisOwners>) {
      addAll(values)
    }/**
     * <pre>
     * owners represents a map from index to owners of the capability index
     * index key is string to allow amino marshalling.
     * </pre>
     *
     * <code>repeated .cosmos.capability.v1beta1.GenesisOwners owners = 2 [(.gogoproto.nullable) = false];</code>
     * @param index The index to set the value at.
     * @param value The owners to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setOwners")
    operator fun com.google.protobuf.kotlin.DslList<cosmos.capability.v1beta1.Genesis.GenesisOwners, OwnersProxy>.set(index: kotlin.Int, value: cosmos.capability.v1beta1.Genesis.GenesisOwners) {
      _builder.setOwners(index, value)
    }/**
     * <pre>
     * owners represents a map from index to owners of the capability index
     * index key is string to allow amino marshalling.
     * </pre>
     *
     * <code>repeated .cosmos.capability.v1beta1.GenesisOwners owners = 2 [(.gogoproto.nullable) = false];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearOwners")
    fun com.google.protobuf.kotlin.DslList<cosmos.capability.v1beta1.Genesis.GenesisOwners, OwnersProxy>.clear() {
      _builder.clearOwners()
    }}
}
@kotlin.jvm.JvmSynthetic
inline fun cosmos.capability.v1beta1.Genesis.GenesisState.copy(block: cosmos.capability.v1beta1.GenesisStateKt.Dsl.() -> Unit): cosmos.capability.v1beta1.Genesis.GenesisState =
  cosmos.capability.v1beta1.GenesisStateKt.Dsl._create(this.toBuilder()).apply { block() }._build()
