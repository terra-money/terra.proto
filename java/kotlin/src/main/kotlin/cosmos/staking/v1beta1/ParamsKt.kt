//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/staking/v1beta1/staking.proto

package cosmos.staking.v1beta1;

@kotlin.jvm.JvmSynthetic
inline fun params(block: cosmos.staking.v1beta1.ParamsKt.Dsl.() -> Unit): cosmos.staking.v1beta1.Staking.Params =
  cosmos.staking.v1beta1.ParamsKt.Dsl._create(cosmos.staking.v1beta1.Staking.Params.newBuilder()).apply { block() }._build()
object ParamsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: cosmos.staking.v1beta1.Staking.Params.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.staking.v1beta1.Staking.Params.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.staking.v1beta1.Staking.Params = _builder.build()

    /**
     * <pre>
     * unbonding_time is the time duration of unbonding.
     * </pre>
     *
     * <code>.google.protobuf.Duration unbonding_time = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"unbonding_time&#92;"", (.gogoproto.stdduration) = true];</code>
     */
    var unbondingTime: com.google.protobuf.Duration
      @JvmName("getUnbondingTime")
      get() = _builder.getUnbondingTime()
      @JvmName("setUnbondingTime")
      set(value) {
        _builder.setUnbondingTime(value)
      }
    /**
     * <pre>
     * unbonding_time is the time duration of unbonding.
     * </pre>
     *
     * <code>.google.protobuf.Duration unbonding_time = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"unbonding_time&#92;"", (.gogoproto.stdduration) = true];</code>
     */
    fun clearUnbondingTime() {
      _builder.clearUnbondingTime()
    }
    /**
     * <pre>
     * unbonding_time is the time duration of unbonding.
     * </pre>
     *
     * <code>.google.protobuf.Duration unbonding_time = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"unbonding_time&#92;"", (.gogoproto.stdduration) = true];</code>
     * @return Whether the unbondingTime field is set.
     */
    fun hasUnbondingTime(): kotlin.Boolean {
      return _builder.hasUnbondingTime()
    }

    /**
     * <pre>
     * max_validators is the maximum number of validators.
     * </pre>
     *
     * <code>uint32 max_validators = 2 [(.gogoproto.moretags) = "yaml:&#92;"max_validators&#92;""];</code>
     */
    var maxValidators: kotlin.Int
      @JvmName("getMaxValidators")
      get() = _builder.getMaxValidators()
      @JvmName("setMaxValidators")
      set(value) {
        _builder.setMaxValidators(value)
      }
    /**
     * <pre>
     * max_validators is the maximum number of validators.
     * </pre>
     *
     * <code>uint32 max_validators = 2 [(.gogoproto.moretags) = "yaml:&#92;"max_validators&#92;""];</code>
     */
    fun clearMaxValidators() {
      _builder.clearMaxValidators()
    }

    /**
     * <pre>
     * max_entries is the max entries for either unbonding delegation or redelegation (per pair/trio).
     * </pre>
     *
     * <code>uint32 max_entries = 3 [(.gogoproto.moretags) = "yaml:&#92;"max_entries&#92;""];</code>
     */
    var maxEntries: kotlin.Int
      @JvmName("getMaxEntries")
      get() = _builder.getMaxEntries()
      @JvmName("setMaxEntries")
      set(value) {
        _builder.setMaxEntries(value)
      }
    /**
     * <pre>
     * max_entries is the max entries for either unbonding delegation or redelegation (per pair/trio).
     * </pre>
     *
     * <code>uint32 max_entries = 3 [(.gogoproto.moretags) = "yaml:&#92;"max_entries&#92;""];</code>
     */
    fun clearMaxEntries() {
      _builder.clearMaxEntries()
    }

    /**
     * <pre>
     * historical_entries is the number of historical entries to persist.
     * </pre>
     *
     * <code>uint32 historical_entries = 4 [(.gogoproto.moretags) = "yaml:&#92;"historical_entries&#92;""];</code>
     */
    var historicalEntries: kotlin.Int
      @JvmName("getHistoricalEntries")
      get() = _builder.getHistoricalEntries()
      @JvmName("setHistoricalEntries")
      set(value) {
        _builder.setHistoricalEntries(value)
      }
    /**
     * <pre>
     * historical_entries is the number of historical entries to persist.
     * </pre>
     *
     * <code>uint32 historical_entries = 4 [(.gogoproto.moretags) = "yaml:&#92;"historical_entries&#92;""];</code>
     */
    fun clearHistoricalEntries() {
      _builder.clearHistoricalEntries()
    }

    /**
     * <pre>
     * bond_denom defines the bondable coin denomination.
     * </pre>
     *
     * <code>string bond_denom = 5 [(.gogoproto.moretags) = "yaml:&#92;"bond_denom&#92;""];</code>
     */
    var bondDenom: kotlin.String
      @JvmName("getBondDenom")
      get() = _builder.getBondDenom()
      @JvmName("setBondDenom")
      set(value) {
        _builder.setBondDenom(value)
      }
    /**
     * <pre>
     * bond_denom defines the bondable coin denomination.
     * </pre>
     *
     * <code>string bond_denom = 5 [(.gogoproto.moretags) = "yaml:&#92;"bond_denom&#92;""];</code>
     */
    fun clearBondDenom() {
      _builder.clearBondDenom()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun cosmos.staking.v1beta1.Staking.Params.copy(block: cosmos.staking.v1beta1.ParamsKt.Dsl.() -> Unit): cosmos.staking.v1beta1.Staking.Params =
  cosmos.staking.v1beta1.ParamsKt.Dsl._create(this.toBuilder()).apply { block() }._build()
