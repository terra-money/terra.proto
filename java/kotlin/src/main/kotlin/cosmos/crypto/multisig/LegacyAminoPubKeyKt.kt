//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/crypto/multisig/keys.proto

package cosmos.crypto.multisig;

@kotlin.jvm.JvmSynthetic
inline fun legacyAminoPubKey(block: cosmos.crypto.multisig.LegacyAminoPubKeyKt.Dsl.() -> Unit): cosmos.crypto.multisig.Keys.LegacyAminoPubKey =
  cosmos.crypto.multisig.LegacyAminoPubKeyKt.Dsl._create(cosmos.crypto.multisig.Keys.LegacyAminoPubKey.newBuilder()).apply { block() }._build()
object LegacyAminoPubKeyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: cosmos.crypto.multisig.Keys.LegacyAminoPubKey.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.crypto.multisig.Keys.LegacyAminoPubKey.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.crypto.multisig.Keys.LegacyAminoPubKey = _builder.build()

    /**
     * <code>uint32 threshold = 1 [(.gogoproto.moretags) = "yaml:&#92;"threshold&#92;""];</code>
     */
    var threshold: kotlin.Int
      @JvmName("getThreshold")
      get() = _builder.getThreshold()
      @JvmName("setThreshold")
      set(value) {
        _builder.setThreshold(value)
      }
    /**
     * <code>uint32 threshold = 1 [(.gogoproto.moretags) = "yaml:&#92;"threshold&#92;""];</code>
     */
    fun clearThreshold() {
      _builder.clearThreshold()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class PublicKeysProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .google.protobuf.Any public_keys = 2 [(.gogoproto.customname) = "PubKeys", (.gogoproto.moretags) = "yaml:&#92;"pubkeys&#92;""];</code>
     */
     val publicKeys: com.google.protobuf.kotlin.DslList<com.google.protobuf.Any, PublicKeysProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getPublicKeysList()
      )
    /**
     * <code>repeated .google.protobuf.Any public_keys = 2 [(.gogoproto.customname) = "PubKeys", (.gogoproto.moretags) = "yaml:&#92;"pubkeys&#92;""];</code>
     * @param value The publicKeys to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addPublicKeys")
    fun com.google.protobuf.kotlin.DslList<com.google.protobuf.Any, PublicKeysProxy>.add(value: com.google.protobuf.Any) {
      _builder.addPublicKeys(value)
    }/**
     * <code>repeated .google.protobuf.Any public_keys = 2 [(.gogoproto.customname) = "PubKeys", (.gogoproto.moretags) = "yaml:&#92;"pubkeys&#92;""];</code>
     * @param value The publicKeys to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignPublicKeys")
    inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.Any, PublicKeysProxy>.plusAssign(value: com.google.protobuf.Any) {
      add(value)
    }/**
     * <code>repeated .google.protobuf.Any public_keys = 2 [(.gogoproto.customname) = "PubKeys", (.gogoproto.moretags) = "yaml:&#92;"pubkeys&#92;""];</code>
     * @param values The publicKeys to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllPublicKeys")
    fun com.google.protobuf.kotlin.DslList<com.google.protobuf.Any, PublicKeysProxy>.addAll(values: kotlin.collections.Iterable<com.google.protobuf.Any>) {
      _builder.addAllPublicKeys(values)
    }/**
     * <code>repeated .google.protobuf.Any public_keys = 2 [(.gogoproto.customname) = "PubKeys", (.gogoproto.moretags) = "yaml:&#92;"pubkeys&#92;""];</code>
     * @param values The publicKeys to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllPublicKeys")
    inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.Any, PublicKeysProxy>.plusAssign(values: kotlin.collections.Iterable<com.google.protobuf.Any>) {
      addAll(values)
    }/**
     * <code>repeated .google.protobuf.Any public_keys = 2 [(.gogoproto.customname) = "PubKeys", (.gogoproto.moretags) = "yaml:&#92;"pubkeys&#92;""];</code>
     * @param index The index to set the value at.
     * @param value The publicKeys to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setPublicKeys")
    operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.Any, PublicKeysProxy>.set(index: kotlin.Int, value: com.google.protobuf.Any) {
      _builder.setPublicKeys(index, value)
    }/**
     * <code>repeated .google.protobuf.Any public_keys = 2 [(.gogoproto.customname) = "PubKeys", (.gogoproto.moretags) = "yaml:&#92;"pubkeys&#92;""];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearPublicKeys")
    fun com.google.protobuf.kotlin.DslList<com.google.protobuf.Any, PublicKeysProxy>.clear() {
      _builder.clearPublicKeys()
    }}
}
@kotlin.jvm.JvmSynthetic
inline fun cosmos.crypto.multisig.Keys.LegacyAminoPubKey.copy(block: cosmos.crypto.multisig.LegacyAminoPubKeyKt.Dsl.() -> Unit): cosmos.crypto.multisig.Keys.LegacyAminoPubKey =
  cosmos.crypto.multisig.LegacyAminoPubKeyKt.Dsl._create(this.toBuilder()).apply { block() }._build()
