//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/auth/v1beta1/auth.proto

package cosmos.auth.v1beta1;

@kotlin.jvm.JvmSynthetic
inline fun moduleAccount(block: cosmos.auth.v1beta1.ModuleAccountKt.Dsl.() -> Unit): cosmos.auth.v1beta1.Auth.ModuleAccount =
  cosmos.auth.v1beta1.ModuleAccountKt.Dsl._create(cosmos.auth.v1beta1.Auth.ModuleAccount.newBuilder()).apply { block() }._build()
object ModuleAccountKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: cosmos.auth.v1beta1.Auth.ModuleAccount.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.auth.v1beta1.Auth.ModuleAccount.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.auth.v1beta1.Auth.ModuleAccount = _builder.build()

    /**
     * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
     */
    var baseAccount: cosmos.auth.v1beta1.Auth.BaseAccount
      @JvmName("getBaseAccount")
      get() = _builder.getBaseAccount()
      @JvmName("setBaseAccount")
      set(value) {
        _builder.setBaseAccount(value)
      }
    /**
     * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
     */
    fun clearBaseAccount() {
      _builder.clearBaseAccount()
    }
    /**
     * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
     * @return Whether the baseAccount field is set.
     */
    fun hasBaseAccount(): kotlin.Boolean {
      return _builder.hasBaseAccount()
    }

    /**
     * <code>string name = 2;</code>
     */
    var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * <code>string name = 2;</code>
     */
    fun clearName() {
      _builder.clearName()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class PermissionsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated string permissions = 3;</code>
     * @return A list containing the permissions.
     */
    val permissions: com.google.protobuf.kotlin.DslList<kotlin.String, PermissionsProxy>
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getPermissionsList()
      )
    /**
     * <code>repeated string permissions = 3;</code>
     * @param value The permissions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addPermissions")
    fun com.google.protobuf.kotlin.DslList<kotlin.String, PermissionsProxy>.add(value: kotlin.String) {
      _builder.addPermissions(value)
    }
    /**
     * <code>repeated string permissions = 3;</code>
     * @param value The permissions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignPermissions")
    operator fun com.google.protobuf.kotlin.DslList<kotlin.String, PermissionsProxy>.plusAssign(value: kotlin.String) {
      _builder.addPermissions(value)
    }
    /**
     * <code>repeated string permissions = 3;</code>
     * @param values The permissions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllPermissions")
    fun com.google.protobuf.kotlin.DslList<kotlin.String, PermissionsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllPermissions(values)
    }
    /**
     * <code>repeated string permissions = 3;</code>
     * @param values The permissions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllPermissions")
    operator fun com.google.protobuf.kotlin.DslList<kotlin.String, PermissionsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllPermissions(values)
    }
    /**
     * <code>repeated string permissions = 3;</code>
     * @param index The index to set the value at.
     * @param value The permissions to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setPermissions")
    operator fun com.google.protobuf.kotlin.DslList<kotlin.String, PermissionsProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setPermissions(index, value)
    }/**
     * <code>repeated string permissions = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearPermissions")
    fun com.google.protobuf.kotlin.DslList<kotlin.String, PermissionsProxy>.clear() {
      _builder.clearPermissions()
    }}
}
@kotlin.jvm.JvmSynthetic
inline fun cosmos.auth.v1beta1.Auth.ModuleAccount.copy(block: cosmos.auth.v1beta1.ModuleAccountKt.Dsl.() -> Unit): cosmos.auth.v1beta1.Auth.ModuleAccount =
  cosmos.auth.v1beta1.ModuleAccountKt.Dsl._create(this.toBuilder()).apply { block() }._build()
